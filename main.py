import telebot
from telebot import types
import pendulum
import requests
from bs4 import BeautifulSoup as bs

# -= –¢–æ–∫–µ–Ω –±–æ—Ç–∞ =- #

bot = telebot.TeleBot('6440852245:AAE6CiE5QkugkNk2VHKlybHezUx2jdfkg-w')

# -= –°—Ç—Ä–∞–Ω–∏—Ü—ã –±–æ—Ç–∞ =- #

@bot.message_handler(commands = ['start'])
def start(message):
    markup = types.ReplyKeyboardMarkup(resize_keyboard=True)
    btn_homeworks = types.KeyboardButton("üìö –î–æ–º–∞—à–Ω–∏–µ –∑–∞–¥–∞–Ω–∏—è")
    btn_topics = types.KeyboardButton("üìù –¢–µ–º—ã –¥–æ–∫–ª–∞–¥–æ–≤")
    markup.add(btn_homeworks, btn_topics)
    bot.send_message(message.from_user.id, f"–ü—Ä–∏–≤–µ—Ç, {message.from_user.username}!\n–ß—Ç–æ –≤—ã —Ö–æ—Ç–µ–ª–∏ –±—ã —É–∑–Ω–∞—Ç—å?", reply_markup=markup)

def four_zero_four(message):
    markup = types.ReplyKeyboardMarkup(resize_keyboard=True)
    btn_back = types.KeyboardButton("‚¨ÖÔ∏è –í–µ—Ä–Ω—É—Ç—å—Å—è –≤ –º–µ–Ω—é")
    markup.add(btn_back)
    bot.send_message(message.from_user.id, "–£–ø—Å... –ü–æ—Ö–æ–¥—É —è –Ω–µ –º–æ–≥—É –æ–±—Ä–∞–±–æ—Ç–∞—Ç—å –≤–∞—à –∑–∞–ø—Ä–æ—Å üòî", reply_markup=markup)

def select_data_homeworks(message):
    markup = types.InlineKeyboardMarkup(resize_keyboard=True)
    btn_homeworksfortomorrow = types.KeyboardButton("üìÜ –ù–∞ –∑–∞–≤—Ç—Ä–∞")
    btn_allactivehomeworks = types.KeyboardButton("üìã –í—Å–µ –∞–∫—Ç–∏–≤–Ω—ã–µ")
    markup.add(btn_homeworksfortomorrow, btn_allactivehomeworks)
    bot.send_message(message.from_user.id, "–í—ã–±–µ—Ä–∏—Ç–µ, –∫–∞–∫–∏–µ –î–ó –≤—ã —Ö–æ—Ç–∏—Ç–µ —É–≤–∏–¥–µ—Ç—å ( üìÜ –ù–∞ –∑–∞–≤—Ç—Ä–∞ / üìã –í—Å–µ –∞–∫—Ç–∏–≤–Ω—ã–µ )")

def homework_for_tomorrow(message):
    tomorrow = list(int(i) for i in pendulum.tomorrow("Europe/Moscow").format('DD.MM.YYYY').split('.'))
    URL_TEMPLATE = "https://ikbo2123.ru/category/general/homeworks/"
    r = requests.get(URL_TEMPLATE)
    soup = bs(r.text, "html.parser")
    homeworks = soup.find_all('h2', class_='wp-block-post-title')
    verificated_homeworks = []
    for homework in homeworks:
        tempdata = list(int(i) for i in homework.text[-10:].split('.'))
        if tomorrow[2] == tempdata[2] and tomorrow[1] == tempdata[1] and tomorrow[0] == tempdata[0]:
            verificated_homeworks += [[homework.text, homework.a['href']]]
    if len(verificated_homeworks) == 0:
        markup = types.ReplyKeyboardMarkup(resize_keyboard=True)
        btn_back = types.KeyboardButton("‚¨ÖÔ∏è –í–µ—Ä–Ω—É—Ç—å—Å—è –≤ –º–µ–Ω—é")
        markup.add(btn_back)
        bot.send_message(message.from_user.id, "–£—Ä–∞! –î–æ–º–∞—à–∫–∏ –Ω–∞ –∑–∞–≤—Ç–∞ –æ—Ç—Å—É—Ç—Å—Ç–≤—É—é—Ç üòä", reply_markup=markup)
    else:
        markupInline = types.InlineKeyboardMarkup()
        buttons = []
        for vhomework in verificated_homeworks:
            btn_In_Temp = types.InlineKeyboardButton(text=vhomework[0], href=vhomework[1])
            markupInline.add(btn_In_Temp)
        bot.send_message(message.from_user.id, "üìö –î–æ–º–∞—à–Ω–∏–µ –∑–∞–¥–∞–Ω–∏—è –Ω–∞ –∑–∞–≤—Ç—Ä–∞:", reply_markup=markupInline)
        markup = types.ReplyKeyboardMarkup(resize_keyboard=True)
        btn_back = types.KeyboardButton("‚¨ÖÔ∏è –í–µ—Ä–Ω—É—Ç—å—Å—è –≤ –º–µ–Ω—é")
        markup.add(btn_back)
        bot.send_message(message.from_user.id, "–î—Ä—É–≥–∏–µ –î–ó —Å–º–æ—Ç—Ä–∏—Ç–µ –Ω–∞ —Å–∞–π—Ç–µ ikbo2123.ru", reply_markup=markup)

def active_homeworks(message):
    tomorrow = list(int(i) for i in pendulum.tomorrow("Europe/Moscow").format('DD.MM.YYYY').split('.'))
    URL_TEMPLATE = "https://ikbo2123.ru/category/general/homeworks/"
    r = requests.get(URL_TEMPLATE)
    soup = bs(r.text, "html.parser")
    homeworks = soup.find_all('h2', class_='wp-block-post-title')
    verificated_homeworks = []
    for homework in homeworks:
        tempdata = list(int(i) for i in homework.text[-10:].split('.'))
        if (tomorrow[2] < tempdata[2]) or (tomorrow[2] == tempdata[2] and tomorrow[1] < tempdata[1]) or (tomorrow[2] == tempdata[2] and tomorrow[1] == tempdata[1] and tomorrow[0] <=tempdata[0]):
            verificated_homeworks += [[homework.text, homework.a['href']]]
    if len(verificated_homeworks) == 0:
        markup = types.ReplyKeyboardMarkup(resize_keyboard=True)
        btn_back = types.KeyboardButton("‚¨ÖÔ∏è –í–µ—Ä–Ω—É—Ç—å—Å—è –≤ –º–µ–Ω—é")
        markup.add(btn_back)
        bot.send_message(message.from_user.id, "–£—Ä–∞! –î–æ–º–∞—à–µ–∫ –Ω–∞ –¥–∞–Ω–Ω—ã–π –º–æ–º–µ–Ω—Ç –Ω–µ—Ç üòä", reply_markup=markup)
    else:
        markupInline = types.InlineKeyboardMarkup()
        buttons = []
        for vhomework in verificated_homeworks:
            btn_In_Temp = types.InlineKeyboardButton(text=vhomework[0], href=vhomework[1])
            markupInline.add(btn_In_Temp)
        bot.send_message(message.from_user.id, "üìö –ê–∫—Ç–∏–≤–Ω—ã–µ –¥–æ–º–∞—à–Ω–∏–µ –∑–∞–¥–∞–Ω–∏—è:", reply_markup=markupInline)
        markup = types.ReplyKeyboardMarkup(resize_keyboard=True)
        btn_back = types.KeyboardButton("‚¨ÖÔ∏è –í–µ—Ä–Ω—É—Ç—å—Å—è –≤ –º–µ–Ω—é")
        markup.add(btn_back)
        bot.send_message(message.from_user.id, "–û—Å—Ç–∞–ª—å–Ω—É—é –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –≤—ã –Ω–∞–π–¥—ë—Ç–µ –Ω–∞ —Å–∞–π—Ç–µ ikbo2123.ru", reply_markup=markup)

# -= –û–±—Ä–∞–±–æ—Ç–∫–∞ –∑–∞–ø—Ä–æ—Å–∞ =- #

@bot.message_handler(content_types=['text'])
def get_text_messages(message):
    match message.text:
        case "üìö –î–æ–º–∞—à–Ω–∏–µ –∑–∞–¥–∞–Ω–∏—è":
            select_data_homeworks(message)
        case "üìÜ –ù–∞ –∑–∞–≤—Ç—Ä–∞":
            homework_for_tomorrow(message)
        case "üìã –í—Å–µ –∞–∫—Ç–∏–≤–Ω—ã–µ":
            active_homeworks(message)
        case "üìù –¢–µ–º—ã –¥–æ–∫–ª–∞–¥–æ–≤":
            pass
        case "‚¨ÖÔ∏è –í–µ—Ä–Ω—É—Ç—å—Å—è –≤ –º–µ–Ω—é":
            start(message)
        case _:
            four_zero_four(message)
